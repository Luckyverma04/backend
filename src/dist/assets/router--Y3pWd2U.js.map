{"version":3,"file":"router--Y3pWd2U.js","sources":["../../node_modules/react-router/dist/development/chunk-UH6JLGW7.mjs","../../node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\n * react-router v7.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  /**\n   * Create a new `unstable_RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      allowInPlaceMutations || !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest,\n          allowInPlaceMutations\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(\n        route.children,\n        branches,\n        routesMeta,\n        path,\n        hasParentOptionalSegments\n      );\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify2(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  ).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map((m) => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition,\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some((m) => m.route.unstable_middleware) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2,\n              false\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2,\n      unstable_allowElementMutations\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          async () => {\n            let res = await generateMiddlewareResponse(\n              async (revalidationRequest) => {\n                let result2 = await queryImpl(\n                  revalidationRequest,\n                  location,\n                  matches,\n                  requestContext,\n                  dataStrategy || null,\n                  skipLoaderErrorBubbling === true,\n                  null,\n                  filterMatchesToLoad || null,\n                  skipRevalidation === true\n                );\n                if (isResponse(result2)) {\n                  return result2;\n                }\n                renderedStaticContext = { location, basename, ...result2 };\n                return renderedStaticContext;\n              }\n            );\n            return res;\n          },\n          async (error, routeId) => {\n            if (isRedirectResponse(error)) {\n              return error;\n            }\n            if (isResponse(error)) {\n              try {\n                error = new ErrorResponseImpl(\n                  error.status,\n                  error.statusText,\n                  await parseResponseBody(error)\n                );\n              } catch (e) {\n                error = e;\n              }\n            }\n            if (isDataWithResponseInit(error)) {\n              error = dataWithResponseInitToErrorResponse(error);\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              let staticContext = getStaticContextFromError(\n                dataRoutes,\n                renderedStaticContext,\n                error,\n                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n              );\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              let staticContext = {\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              };\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runServerMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        async () => {\n          let res = await generateMiddlewareResponse(\n            async (innerRequest) => {\n              let result2 = await queryImpl(\n                innerRequest,\n                location,\n                matches,\n                requestContext,\n                dataStrategy || null,\n                false,\n                match,\n                null,\n                false\n              );\n              let processed = handleQueryResult(result2);\n              return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n            }\n          );\n          return res;\n        },\n        (error) => {\n          if (isDataWithResponseInit(error)) {\n            return Promise.resolve(dataWithResponseInitToResponse(error));\n          }\n          if (isResponse(error)) {\n            return Promise.resolve(error);\n          }\n          throw error;\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isRouteRequest) {\n          if (isResponse(result.result)) {\n            throw result;\n          } else if (isDataWithResponseInit(result.result)) {\n            throw dataWithResponseInitToResponse(result.result);\n          }\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({ basename, pathname: path.pathname });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach((newRoute) => {\n    let existingRoute = childrenToPatch.find(\n      (existingRoute2) => isSameRoute(newRoute, existingRoute2)\n    );\n    if (existingRoute) {\n      existingChildren.push({ existingRoute, newRoute });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(\n      uniqueChildren,\n      mapRouteProperties2,\n      [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n      manifest\n    );\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let { existingRoute, newRoute } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes(\n        [newRoute],\n        mapRouteProperties2,\n        [],\n        // Doesn't matter for mutated routes since they already have an id\n        {},\n        // Don't touch the manifest here since we're updating in place\n        true\n      );\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  let didCallHandler = false;\n  return runClientMiddlewarePipeline(\n    args,\n    () => {\n      didCallHandler = true;\n      return defaultDataStrategy(args);\n    },\n    (error, routeId) => clientMiddlewareErrorHandler(\n      error,\n      routeId,\n      args.matches,\n      didCallHandler\n    )\n  );\n}\nfunction clientMiddlewareErrorHandler(error, routeId, matches, didCallHandler) {\n  if (didCallHandler) {\n    return {\n      [routeId]: { type: \"error\", result: error }\n    };\n  } else {\n    let maxBoundaryIdx = Math.min(\n      // Throwing route\n      matches.findIndex((m) => m.route.id === routeId) || 0,\n      // or the shallowest route that needs to load data\n      matches.findIndex((m) => m.unstable_shouldCallHandler()) || 0\n    );\n    let boundaryRouteId = findNearestBoundary(\n      matches,\n      matches[maxBoundaryIdx].route.id\n    ).route.id;\n    return {\n      [boundaryRouteId]: { type: \"error\", result: error }\n    };\n  }\n}\nasync function runServerMiddlewarePipeline(args, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let result = await callServerRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    errorHandler\n  );\n  if (isResponse(result)) {\n    return result;\n  }\n  invariant(false, `Expected a Response to be returned from route middleware`);\n}\nasync function callServerRouteMiddleware(args, middlewares, handler, errorHandler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    try {\n      let result = await callServerRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        errorHandler,\n        idx + 1\n      );\n      if (isDataWithResponseInit(result)) {\n        result = dataWithResponseInitToResponse(result);\n      }\n      nextResult = result;\n      return nextResult;\n    } catch (e) {\n      nextResult = await errorHandler(e, routeId);\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (isDataWithResponseInit(result)) {\n      result = dataWithResponseInitToResponse(result);\n    }\n    if (nextCalled) {\n      return typeof result === \"undefined\" ? nextResult : result;\n    } else if (isResponse(result)) {\n      return result;\n    } else {\n      nextResult = await next();\n      return nextResult;\n    }\n  } catch (e) {\n    let response = await errorHandler(e, routeId);\n    return response;\n  }\n}\nasync function runClientMiddlewarePipeline(args, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let handlerResult = {};\n  await callClientRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    errorHandler,\n    handlerResult\n  );\n  return handlerResult;\n}\nasync function callClientRouteMiddleware(args, middlewares, handler, errorHandler, handlerResult = {}, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    Object.assign(handlerResult, result);\n    return;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    try {\n      let result = await callClientRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        errorHandler,\n        handlerResult,\n        idx + 1\n      );\n      Object.assign(handlerResult, result);\n    } catch (e) {\n      let result = await errorHandler(e, routeId);\n      Object.assign(handlerResult, result);\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (typeof result !== \"undefined\") {\n      console.warn(\n        \"client middlewares are not intended to return values, the value will be ignored\",\n        result\n      );\n    }\n    if (!nextCalled) {\n      await next();\n    }\n  } catch (error) {\n    let result = await errorHandler(error, routeId);\n    Object.assign(handlerResult, result);\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    let didCallHandler = false;\n    return runClientMiddlewarePipeline(\n      typedDataStrategyArgs,\n      () => {\n        didCallHandler = true;\n        return cb({\n          ...typedDataStrategyArgs,\n          fetcherKey,\n          unstable_runClientMiddleware: () => {\n            throw new Error(\n              \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n            );\n          }\n        });\n      },\n      (error, routeId) => clientMiddlewareErrorHandler(\n        error,\n        routeId,\n        matches,\n        didCallHandler\n      )\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [\n        m._lazyPromises?.handler,\n        m._lazyPromises?.route\n      ])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, data2.init ?? void 0);\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(\n    data2.init?.status ?? 500,\n    data2.init?.statusText ?? \"Internal Server Error\",\n    data2.data\n  );\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight(\n    (outlet, match, index) => {\n      let error;\n      let shouldRenderHydrateFallback = false;\n      let errorElement = null;\n      let hydrateFallbackElement = null;\n      if (dataRouterState) {\n        error = errors && match.route.id ? errors[match.route.id] : void 0;\n        errorElement = match.route.errorElement || defaultErrorElement;\n        if (renderFallback) {\n          if (fallbackIndex < 0 && index === 0) {\n            warningOnce(\n              \"route-fallback\",\n              false,\n              \"No `HydrateFallback` element provided to render during initial hydration\"\n            );\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = null;\n          } else if (fallbackIndex === index) {\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n          }\n        }\n      }\n      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (shouldRenderHydrateFallback) {\n          children = hydrateFallbackElement;\n        } else if (match.route.Component) {\n          children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /* @__PURE__ */ React2.createElement(\n          RenderedRoute,\n          {\n            match,\n            routeContext: {\n              outlet,\n              matches: matches2,\n              isDataRoute: dataRouterState != null\n            },\n            children\n          }\n        );\n      };\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n        RenderErrorBoundary,\n        {\n          location: dataRouterState.location,\n          revalidation: dataRouterState.revalidation,\n          component: errorElement,\n          error,\n          children: getChildren(),\n          routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n        }\n      ) : getChildren();\n    },\n    null\n  );\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename\n    }),\n    [router, navigator, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction useRouteComponentProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    matches: useMatches()\n  };\n}\nfunction WithComponentProps({\n  children\n}) {\n  const props = useRouteComponentProps();\n  return React3.cloneElement(children, props);\n}\nfunction withComponentProps(Component4) {\n  return function WithComponentProps2() {\n    const props = useRouteComponentProps();\n    return React3.createElement(Component4, props);\n  };\n}\nfunction useHydrateFallbackProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData()\n  };\n}\nfunction WithHydrateFallbackProps({\n  children\n}) {\n  const props = useHydrateFallbackProps();\n  return React3.cloneElement(children, props);\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function WithHydrateFallbackProps2() {\n    const props = useHydrateFallbackProps();\n    return React3.createElement(HydrateFallback, props);\n  };\n}\nfunction useErrorBoundaryProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    error: useRouteError()\n  };\n}\nfunction WithErrorBoundaryProps({\n  children\n}) {\n  const props = useErrorBoundaryProps();\n  return React3.cloneElement(children, props);\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function WithErrorBoundaryProps2() {\n    const props = useErrorBoundaryProps();\n    return React3.createElement(ErrorBoundary, props);\n  };\n}\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            const dateTime = input2.getTime();\n            str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename,\n      shouldAllowOptOut\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (shouldAllowOptOut(m) && hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (results[match.route.id]?.result == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/components.tsx\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href) => ({ rel: \"stylesheet\", href })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React6 from \"react\";\n\n// lib/dom/ssr/fallback.tsx\nimport * as React5 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React7.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  paths.sort().forEach((path) => searchParams.append(\"p\", path));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React8.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React8.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React8.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React8.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React8.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React8.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React8.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React8.useRef(null);\n  React8.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React8.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({ nonce }) {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React8.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React8.createElement(\n    \"style\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      dangerouslySetInnerHTML: { __html: criticalCss }\n    }\n  ) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      rel: \"stylesheet\",\n      href: criticalCss.href,\n      nonce\n    }\n  ) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React8.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React8.createElement(\"link\", { key, nonce, ...link })\n  ));\n}\nfunction PrefetchPageLinks({ page, ...linkProps }) {\n  let { router } = useDataRouterContext2();\n  let matches = React8.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React8.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React8.useState([]);\n  React8.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React8.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React8.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"prefetch\", as: \"fetch\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"modulepreload\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React8.createElement(\"link\", { key, nonce: linkProps.nonce, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React8.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React8.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React8.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React8.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React8.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React8.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React8.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React8.createElement(React8.Fragment, null, /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(\n    !isRSCRouterContext,\n    \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\"\n  );\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React9.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React9.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React9.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React9.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React9.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React9.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React9.createElement(\"head\", null, /* @__PURE__ */ React9.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React9.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React9.createElement(\"title\", null, title)), /* @__PURE__ */ React9.createElement(\"body\", null, /* @__PURE__ */ React9.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React9.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = // @ts-expect-error\n    \"7.8.1\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(new URLSearchParams(searchParams)) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      try {\n        if (location.hash) {\n          let el = document.getElementById(\n            decodeURIComponent(location.hash.slice(1))\n          );\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n      } catch {\n        warning(\n          false,\n          `\"${location.hash.slice(\n            1\n          )}\" is not a decodable element ID. The view will not scroll to it.`\n        );\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, { relative } = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    },\n    _internalSetStateDoNotUseOrYouWillBreakYourApp() {\n      throw msg(\"_internalSetStateDoNotUseOrYouWillBreakYourApp\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  convertRoutesToDataRoutes,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  stripBasename,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  createStaticHandler,\n  getStaticContextFromError,\n  isDataWithResponseInit,\n  isResponse,\n  isRedirectStatusCode,\n  isRedirectResponse,\n  isMutationMethod,\n  DataRouterContext,\n  DataRouterStateContext,\n  RSCRouterContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  ENABLE_DEV_WARNINGS,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  warnOnce,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  WithComponentProps,\n  withComponentProps,\n  WithHydrateFallbackProps,\n  withHydrateFallbackProps,\n  WithErrorBoundaryProps,\n  withErrorBoundaryProps,\n  createSearchParams,\n  encode,\n  createRequestInit,\n  SingleFetchRedirectSymbol,\n  SINGLE_FETCH_REDIRECT_STATUS,\n  NO_BODY_STATUS_CODES,\n  StreamTransfer,\n  getTurboStreamSingleFetchDataStrategy,\n  getSingleFetchDataStrategyImpl,\n  stripIndexParam,\n  singleFetchUrl,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createServerRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  noActionDefinedError,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  getManifestPath,\n  FrameworkContext,\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  setIsHydrated,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2,\n  createStaticRouter\n};\n","/**\n * react-router v7.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\"use client\";\nimport {\n  deserializeErrors,\n  getHydrationData\n} from \"./chunk-IFMMFE4R.mjs\";\nimport {\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  getPatchRoutesOnNavigationFunction,\n  getTurboStreamSingleFetchDataStrategy,\n  hydrationRouteProperties,\n  invariant,\n  mapRouteProperties,\n  useFogOFWarDiscovery\n} from \"./chunk-UH6JLGW7.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let { loaderData } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData(\n      ssrInfo.context.state,\n      routes,\n      (routeId) => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      window.location,\n      window.__reactRouterContext?.basename,\n      ssrInfo.context.isSpaMode\n    );\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(\n      () => router2,\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.routeDiscovery,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\") {\n      setCriticalCss(void 0);\n    }\n  }, []);\n  React2.useEffect(() => {\n    if (process.env.NODE_ENV === \"development\" && criticalCss === void 0) {\n      document.querySelectorAll(`[${CRITICAL_CSS_DATA_ATTRIBUTE}]`).forEach((element) => element.remove());\n    }\n  }, [criticalCss]);\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.routeDiscovery,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode,\n          routeDiscovery: ssrInfo.context.routeDiscovery\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n"],"names":["__typeError","msg","__accessCheck","obj","member","__privateGet","getter","__privateAdd","value","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window2","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","message","warning","cond","createKey","getHistoryState","location","index","current","state","key","parsePath","path","parsedPath","hashIndex","searchIndex","getLocation","createHref2","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace2","createURL","createBrowserURLImpl","fn","n","isAbsolute","base","href","_map","unstable_RouterContextProvider","init","context","unsupportedLazyRouteObjectKeys","isUnsupportedLazyRouteObjectKey","unsupportedLazyRouteFunctionKeys","isUnsupportedLazyRouteFunctionKey","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties2","parentPath","manifest","allowInPlaceMutations","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","parentsMeta","_hasParentOptionalSegments","flattenRoute","hasParentOptionalSegments","relativePath","meta","joinPaths","routesMeta","computeScore","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo2","paramName","splatValue","caseSensitive","regexpSource","_","v","startIndex","nextChar","prependBasename","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponseImpl","status","statusText","data2","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","isAbsoluteUrl","defaultMapRouteProperties","TRANSITIONS_STORAGE_KEY","ResetLoaderDataSymbol","createRouter","routerWindow","isBrowser2","hydrationRouteProperties2","dataRoutes","inFlightDataRoutes","dataStrategyImpl","defaultDataStrategyWithMiddleware","future","unlistenHistory","subscribers","savedScrollPositions2","getScrollRestorationKey2","getScrollPosition","initialScrollRestored","initialMatches","initialMatchesIsFOW","initialErrors","initialized","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","m","errors","shouldLoadRouteOnHydration","fogOfWar","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","fetchersQueuedForDeletion","blockerFunctions","unblockBlockerHistoryUpdate","pendingRevalidationDfd","initialize","historyAction","blockerKey","shouldBlockNavigation","nextHistoryUpdatePromise","resolve","updateBlocker","blockers","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","deleteFetcher","deleteBlocker","subscribe","newState","opts","matchRoute","unmountedFetchers","mountedFetchers","fetcher","subscriber","completeNavigation","flushSync","isActionReload","isMutationMethod","actionData","mergeLoaderData","k","restoreScrollPosition","getSavedScrollPosition","preventScrollReset","viewTransitionOpts","priorPaths","toPaths","navigate","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","nextLocation","userReplace","revalidate","createDeferred","interruptActiveLoads","promise","saveScrollPosition","routesToUse","loadingNavigation","isHashChangeOnly","notFoundMatches","handleNavigational404","request","createClientSideRequest","scopedContext","pendingActionResult","findNearestBoundary","actionResult","handleAction","routeId","isErrorResult","getLoadingNavigation","shortCircuited","updatedMatches","handleLoaders","getActionDataForCommit","isFogOfWar","initialHydration","navigation","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","actionMatch","getTargetMatch","dsMatches","getTargetedDataStrategyMatches","results","callDataStrategy","isRedirectResult","normalizeRedirectLocation","startRedirectNavigation","boundaryMatch","overrideNavigation","fetcherSubmission","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","revalidatingFetchers","getMatchesToLoad","updatedFetchers2","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect2","findRedirect","processLoaderData","updatedFetchers","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch2","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","fetchMatches","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","existingFetcher2","r","doneFetcher","isNavigation","redirectLocation","isDocumentReload","redirectNavigationType","formMethod","formAction","formEncType","fetcherKey","dataResults","callDataStrategyImpl","e","isRedirectDataStrategyResult","response","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","loaderResultsPromise","fetcherResultsPromise","acc","getFetcher","queueFetcherForDeletion","count","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","entries","blockerFunction","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","signal","partialMatches","isNonHMR","localManifest","children","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","unstable_allowElementMutations","isSubmissionNavigation","fromRouteId","relative","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","indexValues","qs","isFetcher","isValidMethod","getInvalidBodyError","stripHashFromPath","text","name","json","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","lazyRoutePropertiesToSkip","hasPatchRoutesOnNavigation","currentUrl","nextUrl","maxIdx","actionStatus","shouldSkipRevalidation","baseShouldRevalidateArgs","forceShouldLoad","isNewLoader","getDataStrategyMatch","defaultShouldRevalidate","isNewRouteInstance","shouldRevalidateArgs","shouldLoad","shouldRevalidateLoader","isMidInitialLoad","fetcherMatches","fetcherMatch","fetchController","fetcherDsMatches","hasData","hasError","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","allowElementMutations","childrenToPatch","uniqueChildren","existingChildren","newRoute","existingRoute","existingRoute2","isSameRoute","existingRouteTyped","newRouteTyped","aChild","bChild","lazyRoutePropertyCache","loadLazyRouteProperty","routeToUpdate","lazyFn","cache","cachedPromise","propertyPromise","isUnsupported","isStaticallyDefined","lazyRouteFunctionCache","loadLazyRoute","type","lazyRoutePromise2","lazyRoute","routeUpdates","lazyRouteProperty","lazyValue","lazyKeys","lazyPropertyPromises","lazyHandlerPromise","lazyRoutePromise","defaultDataStrategy","args","matchesToLoad","keyedResults","didCallHandler","runClientMiddlewarePipeline","clientMiddlewareErrorHandler","maxBoundaryIdx","handler","errorHandler","tuples","handlerResult","callClientRouteMiddleware","middlewares","tuple","middleware","nextCalled","next","getDataStrategyMatchLazyPromises","lazyMiddlewarePromise","lazyRoutePromises","unstable_shouldRevalidateArgs","isUsingNewApi","_lazyPromises","handlerOverride","callLoaderOrAction","targetMatch","isStaticHandler","dataStrategyArgs","cb","typedDataStrategyArgs","onReject","isAction","runHandler","reject","abortPromise","actualHandler","ctx","handlerPromise","handlerError","handler2","parseResponseBody","contentType","dataStrategyResult","isResponse","isDataWithResponseInit","trimmedMatches","normalizedLocation","isSameBasename","processRouteLoaderData","skipLoaderErrorBubbling","statusCode","foundError","loaderHeaders","pendingError","newLoaderData","mergedLoaderData","merged","method","errorMessage","_window","transitions","sessionPositions","res","rej","val","DataRouterContext","React.createContext","DataRouterStateContext","ViewTransitionContext","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","navigator","React2.useContext","useResolvedPath","joinedPathname","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","React2.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","activeRef","React2.useRef","React2.useCallback","OutletContext","React2.createContext","useOutlet","outlet","React2.createElement","useParams","routeMatch","React2.useMemo","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parentSegments","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","codeStyles","devInfo","React2.Fragment","defaultErrorElement","RenderErrorBoundary","React2.Component","props","errorInfo","RenderedRoute","routeContext","renderedMatches","errorIndex","renderFallback","fallbackIndex","errors2","needsToRunLoader","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","matches2","getChildren","getDataRouterConsoleError","hookName","useDataRouterContext","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","alreadyWarned","alreadyWarned2","warnOnce","condition","mapRouteProperties","React3.createElement","hydrationRouteProperties","Deferred","reason","RouterProvider","reactDomFlushSyncImpl","setStateImpl","React3.useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","React3.useRef","setState","React3.useCallback","deletedFetchers","isViewTransitionAvailable","React3.startTransition","t","React3.useLayoutEffect","React3.useEffect","renderPromise","transition2","React3.useMemo","state2","React3.Fragment","Router","MemoizedDataRoutes","React3.memo","DataRoutes","Outlet","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","target","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","body","attr","form","prefix","invariant2","singleFetchUrl","reqUrl","extension","loadRouteModule","routeModulesCache","routeModule","isHtmlLinkDescriptor","getKeyedPrefetchLinks","routeModules","links","mod","dedupeLinkDescriptors","link","getNewMatchesForLinks","page","nextMatches","currentMatches","mode","matchPathChanged","manifestRoute","getModuleLinkHrefs","includeHydrateFallback","dedupeHrefs","hrefs","sortKeys","sorted","descriptors","preloads","set","deduped","descriptor","useDataRouterContext2","React8.useContext","useDataRouterStateContext","FrameworkContext","React8.createContext","useFrameworkContext","usePrefetchBehavior","prefetch","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","React8.useState","shouldPrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","ref","React8.useRef","React8.useEffect","callback","entry","observer","setIntent","cancelIntent","composeEventHandlers","theirHandler","ourHandler","PrefetchPageLinks","linkProps","React8.useMemo","React8.createElement","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","moduleHrefs","React8.Fragment","mergeRefs","refs","isBrowser","createBrowserRouter","parseHydrationData","deserializeErrors","serialized","ErrorConstructor","ABSOLUTE_URL_REGEX2","Link","React10.forwardRef","onClick","discover","reloadDocument","viewTransition","forwardedRef","React10.useContext","absoluteHref","isExternal","targetUrl","prefetchRef","prefetchHandlers","internalOnClick","useLinkClickHandler","handleClick","React10.createElement","React10.Fragment","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","isTransitioning","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","className","style","Form","onSubmit","submit","useSubmit","useFormAction","submitHandler","submitter","submitMethod","getDataRouterConsoleError2","useDataRouterContext3","replaceProp","React10.useCallback","fetcherId","getUniqueFetcherId","currentRouteId","nextPath","RouterProvider2","React.createElement","ReactDOM.flushSync"],"mappings":"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","x_google_ignoreList":[0,1]}